# -*- mode: ruby -*-
# vi: set ft=ruby :


#vagrant up --provision
#Seems to work if you pick network "Default Switch"





# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
    config.vm.box = "gusztavvargadr/windows-10"
    config.vm.guest = :windows
    config.vm.boot_timeout = 600
    config.vm.hostname = "WinDev"
    config.vm.network "private_network", ip: "192.168.99.201"
    config.vm.communicator = "winrm"

    config.vm.synced_folder '.', '/vagrant', disabled: true
    config.vm.provision "file", source: "setup.ps1", destination: "/provision/setup.ps1"
  
    # Enable provisioning with a shell script. Additional provisioners such as
    # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
    # documentation for more information about their specific syntax and use.
    # config.vm.provision "shell", inline: <<-SHELL
    #   apt-get update
    #   apt-get install -y apache2
    # SHELL
    config.vm.provision "shell", privileged: "true", inline: <<-'POWERSHELL'
    Set-TimeZone "Coordinated Universal Time"
 
    # Install Boxstarter
    . { iwr -useb https://boxstarter.org/bootstrapper.ps1 } | iex; Get-Boxstarter -Force

    # Copy setup.ps1 to the Temp directory and then run boxstarter with our setup.ps1 script
    $env:PSModulePath = "$([System.Environment]::GetEnvironmentVariable('PSModulePath', 'User'));$([System.Environment]::GetEnvironmentVariable('PSModulePath', 'Machine'))"
    Import-Module Boxstarter.Chocolatey
    $credential = New-Object System.Management.Automation.PSCredential("vagrant", (ConvertTo-SecureString "vagrant" -AsPlainText -Force))
    Install-BoxstarterPackage c:\provision\setup.ps1 -Credential $credential
  POWERSHELL
  end
  